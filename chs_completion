# _filedir ()
# {
#     local IFS='
# ' xspec;
#     _expand || return 0;
#     local toks=() tmp;
#     while read -r tmp; do
#         [[ -n $tmp ]] && toks[${#toks[@]}]=$tmp;
#     done < <( compgen -d -- "$(quote_readline "$cur")" );
#     if [[ "$1" != -d ]]; then
#         xspec=${1:+"!*.$1"};
#         while read -r tmp; do
#             [[ -n $tmp ]] && toks[${#toks[@]}]=$tmp;
#         done < <( compgen -f -X "$xspec" -- "$(quote_readline "$cur")" );
#     fi;
#     chs=($(chsdir "x$1" "$cur"))
#     COMPREPLY=( "${COMPREPLY[@]}" "${toks[@]}" "${chs[@]}" )
# }

_filedir()
{
    local i IFS=$'\n' xspec

    _tilde "$cur" || return 0

    local -a toks
    local quoted tmp

    _quote_readline_by_ref "$cur" quoted
    toks=( ${toks[@]-} $(
        compgen -d -- "$quoted" | {
            while read -r tmp; do
                # TODO: I have removed a "[ -n $tmp ] &&" before 'printf ..',
                #       and everything works again. If this bug suddenly
                #       appears again (i.e. "cd /b<TAB>" becomes "cd /"),
                #       remember to check for other similar conditionals (here
                #       and _filedir_xspec()). --David
                printf '%s\n' $tmp
            done
        }
    ))

    if [[ "$1" != -d ]]; then
        # Munge xspec to contain uppercase version too
        [[ ${BASH_VERSINFO[0]} -ge 4 ]] && \
            xspec=${1:+"!*.@($1|${1^^})"} || \
            xspec=${1:+"!*.@($1|$(printf %s $1 | tr '[:lower:]' '[:upper:]'))"}
        toks=( ${toks[@]-} $( compgen -f -X "$xspec" -- $quoted) )
    fi
    [ ${#toks[@]} -ne 0 ] && _compopt_o_filenames
    chs=($(chsdir "x$1" "$cur"))
#    echo "1111: chsdir x$1 $cur" | perl -ne '$s=$s.$_;END{$s=~s#\n#\\n#gsm;print $s}'
#    echo "2222: ${chs[@]}" | perl -ne '$s=$s.$_;END{$s=~s#\n#\\n#gsm;print $s}'
    COMPREPLY=( "${COMPREPLY[@]}" "${toks[@]}" "${chs[@]}" )
} # _filedir()

_filedir_xspec ()
{
    local IFS cur xspec;
    IFS='
';
    COMPREPLY=();
    cur=`_get_cword`;
    _expand || return 0;
    xspec=$( gsed -ne '/^complete .*[ 	]'${1##*/}'\([ 	]\|$\)/{p;q;}' 		  $BASH_COMPLETION );
    xspec=${xspec#*-X };
    xspec=${xspec%% *};
    local toks=() tmp;
    while read -r tmp; do
        [[ -n $tmp ]] && toks[${#toks[@]}]=$tmp;
    done < <( compgen -d -- "$(quote_readline "$cur")" );
    while read -r tmp; do
        [[ -n $tmp ]] && toks[${#toks[@]}]=$tmp;
    done < <( eval compgen -f -X $xspec -- "\$(quote_readline "\$cur")" );
    chs=($(chsdir "x$1" "$cur"))
    COMPREPLY=( "${toks[@]}" "${chs[@]}" )
}
